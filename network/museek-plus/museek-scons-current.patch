Index: SConstruct
===================================================================
--- SConstruct
+++ SConstruct
@@ -33,9 +33,9 @@
 opts.Add(BoolOption('RELEASE', 'Build for release', ''))
 opts.Add(ListOption('MULOG', 'Set debug output', '', ['debug', 'cycle', 'calltrace', 'traffictime']))
 opts.Add(ListOption('MUSEEQTRANSLATIONS', 'Build translations for', '', ['fr','de','es','it','pl','ru','pt_BR','ja','zh','sk','he', 'ar', 'cs' ]))
-print "Reading CFLAGS from defaults.py and Command Line arguments"
-opts.Add(BoolOption('LOCKFLAGS', 'Don\'t modify CFLAGS, use only those selected', ''))
-opts.Add('CFLAGS', 'Set your CCFLAGS here', '')
+print "Reading FLAGS from defaults.py and Command Line arguments"
+opts.Add(BoolOption('LOCKFLAGS', 'Don\'t modify FLAGS, use only those selected', ''))
+opts.Add('FLAGS', 'Set your CCFLAGS here', '')
 # CFLAGS are now a string, if you have a mulocal.py from 0.1.11, please remove it.
 opts.Add(BoolOption('EPOLL', 'Use epoll when available', ''))
 opts.Add(BoolOption('MUCOUS', 'Install Mucous (when SWIG can be found', ''))
@@ -102,13 +102,7 @@
 # All warnings if compiler is gcc
 
 if os.path.basename(env['CC']) in ['gcc', 'apgcc']:
-# env['CFLAGS'] = ['-fPIC', '-Wall', '-pipe'] # allows x86_64 to compile
-# ['-Wall', '-pipe']) # original
-	#flags = []
-	#for flag in str(env['CFLAGS']).split(','):
-		#flags.append("-"+flag)
-	#env.Append(CCFLAGS = flags)
-	env.Append(CCFLAGS = env['CFLAGS'].split(' '))
+	env.Append(CCFLAGS = env['FLAGS'].split(' '))
 	if not env['LOCKFLAGS']:
 		if env['RELEASE'] and "-fomit-frame-pointer" not in env["CCFLAGS"]:
 			env.Append(CCFLAGS = ['-fomit-frame-pointer'])
@@ -121,7 +115,6 @@
 		flagstring += i + " "
 	print "BUILDING with CCFLAGS: "+ flagstring
 		
-	#print "BUILDING with CFLAGS: "+ env['CFLAGS'] 
 
 
 # Set up additional include and library paths
@@ -190,7 +183,8 @@
 		print "Couldn't figure out how to use the dynamic run-time linker"
 		Exit(1)
 	env.Replace(LIBS = libs)
-	env.Append(CCFLAGS =  ' -fPIC' )
+        if "-fPIC" not in env["CCFLAGS"]: 
+		env.Append(CCFLAGS =  ' -fPIC' ) 	
 
 
 if check_deps == 1:
@@ -397,7 +391,12 @@
 f.write('RELEASE = %s\n' % (`env['RELEASE']`))
 f.write('MULOG = %s\n' % (`string.join(env['MULOG'], ',')`))
 f.write('LOCKFLAGS = %s\n' % (`env['LOCKFLAGS']`))
-f.write('CFLAGS = %s\n' % (`env['CFLAGS']`))
+if type(env['FLAGS']) == list: 
+        CFLAGS = "" 
+        for string in env['FLAGS']: 
+                CFLAGS += " "+ string 
+        env['FLAGS'] = CFLAGS.strip() 
+f.write('FLAGS = %s\n' % (`env['FLAGS']`))
 f.write('EPOLL = %s\n' % (`env['EPOLL']`))
 f.write('RELAY = %s\n' % (`env['RELAY']`))
 f.write('BINRELOC = %s\n' % (`env['BINRELOC']`))
@@ -405,7 +404,7 @@
 f.write('MUSETUPGTK = %s\n' % (`env['MUSETUPGTK']`))
 f.write('MUSEEQ = %s\n' % (`env['MUSEEQ']`))
 f.write('ONLYMUSEEQ = %s\n' % (`env['ONLYMUSEEQ']`))
-f.write('MUSEEQTRANSLATIONS = %s\n' % (`string.join(env['MUSEEQTRANSLATIONS'], ',')`))
+f.write('MUSEEQTRANSLATIONS = %s\n' % (`env['MUSEEQTRANSLATIONS']`))
 f.write('MUSEEQTRAYICON = %s\n' % (`env['MUSEEQTRAYICON']`))
 f.write('QSA = %s\n' % (`env['QSA']`))
 f.write('RELAY_QSA = %s\n' % (`env['RELAY_QSA']`))
