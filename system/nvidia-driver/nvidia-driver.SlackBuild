#!/bin/sh

# Slackware build script for nvidia-driver

# Copyright 2007-2011 Heinz Wiesinger, Amsterdam, The Netherlands
# Copyright 2012-2017 Edward W. Koenig, Vancouver, WA, USA
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# see changelog.txt

PRGNAM=nvidia-driver
VERSION=${VERSION:-375.26}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

GLVND=${GLVND:-yes} 
# Note: YMMV

set -e

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i586 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i586" ]; then
  SLKCFLAGS="-O2 -march=i586 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
  COMPAT32=no
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
  TARGET="x86"
  LIBDIRSUFFIX=""
  COMPAT32=no
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
  TARGET="x86_64"
  LIBDIRSUFFIX="64"
# Set 32-bit compatibility flag default
  COMPAT32=${COMPAT32:-no}
else
  SLKCFLAGS="-O2"
  LIBDIRSUFFIX=""
  COMPAT32=${COMPAT32:-no}
fi

SRCNAM=NVIDIA-Linux-$TARGET-${VERSION}

# make a clean package directory tree
rm -rf $PKG
rm -rf $TMP/$SRCNAM
mkdir -p $TMP $PKG $OUTPUT $PKG/install
mkdir -p $PKG/usr/lib$LIBDIRSUFFIX/xorg/modules/{drivers,extensions} \
  $PKG/etc/OpenCL/vendors/ $PKG/usr/{bin,doc,man/man1,sbin} \
  $PKG/usr/share/{applications,nvidia,pixmaps} \
  $PKG/usr/include/GL $PKG/etc/vulkan/icd.d $PKG/etc/X11/xorg.conf.d \
  $PKG/etc/X11/glvnd/egl_vendor.d
if [ "$COMPAT32" = "yes" ]; then
  mkdir -p $PKG/usr/lib
fi

# Extract all the sources
cd $TMP
rm -rf nvidia-installer-$VERSION
tar xvf $CWD/nvidia-installer-$VERSION.tar.bz2
rm -rf nvidia-settings-$VERSION
tar xvf $CWD/nvidia-settings-$VERSION.tar.bz2
rm -rf nvidia-xconfig-$VERSION
tar xvf $CWD/nvidia-xconfig-$VERSION.tar.bz2
rm -rf nvidia-modprobe-$VERSION.tar.bz2
tar xvf $CWD/nvidia-modprobe-$VERSION.tar.bz2
rm -rf nvidia-persistenced-$VERSION.tar.bz2
tar xvf $CWD/nvidia-persistenced-$VERSION.tar.bz2
sh $CWD/$SRCNAM.run --extract-only
cd $SRCNAM
chown -R root:root .
find -L . \
 \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
  -o -perm 511 \) -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
  -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

# Compiling nvidia-installer from source
cd $TMP/nvidia-installer-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" LDFLAGS="-lz" make

  install -m 755 _out/Linux_$TARGET/nvidia-installer $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-installer.1.gz $PKG/usr/man/man1/
cd -

# Compiling nvidia-settings from source
cd $TMP/nvidia-settings-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  cd src/libXNVCtrl
    make clean
    CFLAGS="$SLKCFLAGS" \
    make
  cd ../../

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 src/_out/Linux_$TARGET/nvidia-settings $PKG/usr/bin/
  install -m 644 doc/_out/Linux_$TARGET/nvidia-settings.1.gz $PKG/usr/man/man1/
  install -m 644 doc/nvidia-settings.desktop $PKG/usr/share/applications/
  install -m 644 doc/nvidia-settings.png $PKG/usr/share/pixmaps/
cd -

# Compiling the various open source apps instead of using the precompiled binaries
# Compiling nvidia-xconfig from source
cd $TMP/nvidia-xconfig-$VERSION
  chown -R root:root .
  find -L . \
   \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
    -o -perm 511 \) -exec chmod 755 {} \; -o \
   \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
    -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

  CFLAGS="$SLKCFLAGS" \
  make

  install -m 755 _out/Linux_$TARGET/nvidia-xconfig $PKG/usr/bin/
  install -m 644 _out/Linux_$TARGET/nvidia-xconfig.1.gz $PKG/usr/man/man1/
cd -

# Some optional utilities, such as laptop for possible GPU switching and 
# nvidia-modprobe needed to create device nodes, see README!
# FIXME: Needs cleanup at a later date.

# Compiling nvidia-modprobe from source
  cd $TMP/nvidia-modprobe-$VERSION
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    CFLAGS="$SLKCFLAGS" make

    install -m 755 _out/Linux_$TARGET/nvidia-modprobe $PKG/usr/bin/
    install -m 644 _out/Linux_$TARGET/nvidia-modprobe.1.gz $PKG/usr/man/man1/
  cd -
# Compiling nvidia-persistenced from source
  cd $TMP/nvidia-persistenced-$VERSION
    chown -R root:root .
    find -L . \
     \( -perm 777 -o -perm 775 -o -perm 750 -o -perm 711 -o -perm 555 \
      -o -perm 511 \) -exec chmod 755 {} \; -o \
     \( -perm 666 -o -perm 664 -o -perm 640 -o -perm 600 -o -perm 444 \
      -o -perm 440 -o -perm 400 \) -exec chmod 644 {} \;

    CFLAGS="$SLKCFLAGS" make
#FIXME: need rc.nvidia-persistenced script; see doc
    install -m 755 _out/Linux_$TARGET/nvidia-persistenced $PKG/usr/bin/
    install -m 644 _out/Linux_$TARGET/nvidia-persistenced.1.gz $PKG/usr/man/man1/
  cd -

# Now we need to copy these newly compiled binaries to the driver source tree
# since we can't stop the installer from installing the precompiled ones
mv -f $PKG/usr/bin/nvidia-* $TMP/$SRCNAM

# Next we need to backup the Mesa and Xorg-server files since nvidia-installer 
# is too stupid!
# FIXME: Files are backed up cryptically to /var/lib/nvidia/
# so I'll fix this later.

# Configure options
if [ "$GLVND" = "yes" ]; then
  GLVNDOPT="--install-libglvnd --glvnd-glx-client --glvnd-egl-client"
else
  GLVNDOPT="--no-install-libglvnd --no-glvnd-glx-client --no-glvnd-egl-client"
fi
if [ "$ARCH" = "x86_64" ]; then
  if [ "${COMPAT32}" = "yes" ]; then
    COMP32="--install-compat32-libs --compat32-prefix=$PKG/usr "
  else
    COMP32="--no-install-compat32-libs"
  fi
else
  COMP32=""
fi

# First need to save libwfb from getting stomped on - no idea why...
cp -a /usr/lib$LIBDIRSUFFIX/xorg/modules/libwfb.so \
   /usr/lib$LIBDIRSUFFIX/xorg/modules/libwfb.so-xorg


# Install the binary libs using nvidia-installer compiles above 
cd $TMP/$SRCNAM
./nvidia-installer -s -N --no-kernel-module -z -n --no-rpms \
  --no-distro-scripts --no-kernel-module --no-kernel-module-source \
  --force-libglx-indirect \
  --x-prefix=$PKG/usr \
  --x-module-path=$PKG/usr/lib64/xorg/modules \
  --x-library-path=$PKG/usr/lib64 \
  --x-sysconfig-path=$PKG/etc/X11/xorg.conf.d \
  --opengl-prefix=$PKG/usr \
  --utility-prefix=$PKG/usr \
  --documentation-prefix=$PKG/usr \
  --application-profile-path=$PKG/usr/share/nvidia \
  --glvnd-egl-config-path=$PKG/etc/X11/glvnd/egl_vendor.d \
  $GLVNDOPT \
  $COMP32

# Now dump Nvidia' wfb nonsense and restore (massive kludge).
rm -f $PKG/usr/lib64/xorg/modules/libnvidia-wfb.*
rm -f $PKG/usr/lib64/xorg/modules/libwfb.so
mv /usr/lib$LIBDIRSUFFIX/xorg/modules/libwfb.so-xorg \
   /usr/lib$LIBDIRSUFFIX/xorg/modules/libwfb.so

# A lot of files disappear on the host after running the installer :o
# and a broken link gets in the filesystem: remove it
rm -f /usr/lib/libGL.so.1

# Save the installer back up files for later processing, if possible.
# note: if stock files have not been restored after an uninstall, these files will
# be nonsensical the next time this script is run.  
cd /var/lib
  tar cjf nvidia-archive-`date -I`.bz2 nvidia
  rm -rf nvidia
  mv /var/log/nvidia-installer.log /var/log/nvidia-installer-`date -I`.log
cd - 

# These update placeholders and correct wrong paths
sed -i "s|$TMP/package-$PRGNAM/usr/|/usr/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|/usr/X11R6/lib|/usr/lib$LIBDIRSUFFIX/|" $PKG/usr/lib$LIBDIRSUFFIX/libGL.la
sed -i "s|$TMP/package-$PRGNAM/usr/bin/|/usr/bin/|" $PKG/usr/share/applications/nvidia-settings.desktop
sed -i "s|$TMP/package-$PRGNAM/usr/share/doc/NVIDIA_GLX-1.0/|/usr/share/pixmaps/|" \
  $PKG/usr/share/applications/nvidia-settings.desktop

if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  sed -i "s|$TMP/package-$PRGNAM/usr/|/usr/lib/|" $PKG/usr/lib/libGL.la
  sed -i "s|/usr/X11R6/lib|/usr/lib/|" $PKG/usr/lib/libGL.la
fi

#ICDs
install -m 644 nvidia.icd $PKG/etc/OpenCL/vendors/
install -m 644 nvidia_icd.json $PKG/etc/vulkan/icd.d/

# Remove xorg conf file since we take care of that in nvidia-driver
rm -rf $PKG/etc/X11/xorg.conf.d

cd $TMP/$SRCNAM  
# put docs in the right place
mv $PKG/usr/share/man/man1/nvidia-* $PKG/usr/man/man1
rm -rf $PKG/usr/share/man
mv $PKG/usr/share/doc/NVIDIA_GLX-1.0 $PKG/usr/doc/$PRGNAM-$VERSION
rm -rf $PKG/usr/share/doc
cp -a LICENSE NVIDIA_Changelog README.txt html $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/README > $PKG/usr/doc/$PRGNAM-$VERSION/README.Slackware
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

sed "s/PKGVERSION/$VERSION/g" $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

# Flag install as multlib as needed and build package.
cd $PKG
MULTI=""
if [ "$ARCH" = "x86_64" -a "${COMPAT32}" = "yes" ]; then
  MULTI="_multi"
fi
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION$MULTI-$TARGET-$BUILD$TAG.${PKGTYPE:-tgz}

