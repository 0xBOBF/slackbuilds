--- orig/opt/wicd/networking.py	2008-02-11 19:18:48.000000000 -0600
+++ new/opt/wicd/networking.py	2008-03-13 22:05:58.562747876 -0500
@@ -379,7 +379,7 @@
             self.ConnectingMessage = 'removing_old_connection'
             self.lock.release()
 
-            misc.Run("killall dhclient dhclient3 wpa_supplicant")
+            misc.Run("killall dhcpcd dhclient3 wpa_supplicant")
 
             # Check to see if we need to generate a PSK
             if self.wpa_driver != "ralink legacy":
@@ -407,8 +407,8 @@
             self.ConnectingMessage = 'flushing_routing_table'
             self.lock.release()
 
-            misc.Run("ip route flush dev " + self.wireless_interface)
-            misc.Run("ip route flush dev " + self.wired_interface)
+            misc.Run("route del dev " + self.wireless_interface)
+            misc.Run("route del dev " + self.wired_interface)
 
             print "configuring the wireless interface..."
             self.lock.acquire()
@@ -517,7 +517,7 @@
 
                 print "running dhcp..."
                 if not self.ShouldDie:
-                    misc.Run("dhclient " + self.wireless_interface)
+                    misc.Run("dhcpcd " + self.wireless_interface)
 
             # Code repetition --- bad.
             # However, I think this is the best way.
@@ -618,7 +618,7 @@
     def CreateAdHocNetwork(self,essid,channel,ip,enctype,key,encused,ics):
         # Remove wpa_supplicant, as it can cause the connection to revert to
         # previous networks...
-        misc.Run("killall dhclient dhclient3 wpa_supplicant")
+        misc.Run("killall dhcpcd dhclient3 wpa_supplicant")
         misc.Run('ifconfig ' + self.wireless_interface + ' down')
         misc.Run('iwconfig ' + self.wireless_interface + ' mode ad-hoc')
         misc.Run('iwconfig ' + self.wireless_interface + ' channel ' + channel)
@@ -776,14 +776,14 @@
             self.lock.acquire()
             self.ConnectingMessage = 'removing_old_connection'
             self.lock.release()
-            misc.Run("killall dhclient dhclient3 wpa_supplicant")
+            misc.Run("killall dhcpcd dhclient3 wpa_supplicant")
 
             print "flushing the routing table..."
             self.lock.acquire()
             self.ConnectingMessage = 'flushing_routing_table'
             self.lock.release()
-            misc.Run("ip route flush dev " + self.wireless_interface)
-            misc.Run("ip route flush dev " + self.wired_interface)
+            misc.Run("route del dev " + self.wireless_interface)
+            misc.Run("route del dev " + self.wired_interface)
 
             if not network.get("broadcast") is None:
                 self.lock.acquire()
@@ -810,7 +810,7 @@
 
                 print "running dhcp..."
                 if not self.ShouldDie:
-                    misc.Run("dhclient " + self.wired_interface)
+                    misc.Run("dhcpcd " + self.wired_interface)
 
             # Code repetition --- bad.
             # However, I think this is the best way.
