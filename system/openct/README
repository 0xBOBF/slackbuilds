OpenCT implements drivers for several smart card readers.  It comes as
driver in ifdhandler format for PC/SC-Lite, as CT-API driver, or as
a small and lean middleware, so applications can use it with minimal
overhead. OpenCT also has a primitive mechanism to export smart card
readers to remote machines via TCP/IP.

This requires pcsc-lite (available on SlackBuilds.org).

For serial and pcmcia readers only, for using it as a PC/SC ifdhandler,
you have to edit file reader-openct.conf in /etc/reader.conf.d/, to
comment lines in other file(s) and run "/usr/sbin/update-reader.conf".

Compiling with "APIDOC=1 ./openct.SlackBuild" produces API .pdf
documentation (mainly intended for developers).

Compiling with "HALD=1 ./openct.SlackBuild" enable smart-card reader
detection using hal daemon's .fdi files. By default openct uses udev rules
instead to detect it. Hal and udev are alternative.

Compiling with "NONPRIV=1 ./openct.SlackBuild" enable non-privileged
mode, but you may need to modify /etc/rc.d/rc.openctd to allow 'chown'
to change user/group.

To start OpenCT daemon, run "/etc/rc.d/rc.openctd start". This is 
most easily accomplished by adding the following to /etc/rc.d/rc.local:
	if [ -x /etc/rc.d/rc.openctd ]; then
		/etc/rc.d/rc.openctd start
	fi

Beware!
- OpenCT daemon is meant as _alternative_ to pcsc-lite: running rc.openctd
and rc.pcscd at the same time can and will lead to unforseeable problems
(specially with usb devices that can be managed by both of them, one daemon
can claim one device, making it unavailable for other daemon).
- for some unknown reasons, if you start rc.openctd and then stop it,
you may need unplug and plug-in your usb smartcard reader in order
to it to be seen again, so udev rule is re-applied.

