#!/bin/sh

# Slackware build script for virtualbox-ose-addons

# Copyright 2008 Heinz Wiesinger <pprkut@liwjatan.at>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

PRGNAM=virtualbox-ose-addons
SRCNAM=VirtualBox
VERSION=2.0.6
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-_SBo}

CWD=$(pwd)
TMP=${TMP:-/tmp/SBo}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if ! grep ^vboxadd: /etc/passwd 2>&1 > /dev/null; then
  echo "  Must have a vboxadd user to run this script."
  echo "    # useradd -d /var/run/vboxadd -g 1 -s /bin/sh vboxadd"
  echo "  Or something similar."
  exit 1
fi

# kmk doesn't support MAKEFLAGS, so we use JOBS here
JOBS=${JOBS:-3}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -fPIC"
fi

set -e

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $SRCNAM-$VERSION
tar xvf $CWD/$SRCNAM-${VERSION}-OSE.tar.bz2
cd $SRCNAM-$VERSION
chown -R root:root .
chmod -R u+w,go+r-w,a-s .

#We set the environment variables manually to avoid dependency on dev86 and acpica
export BUILD_PLATFORM="linux"
export BUILD_PLATFORM_ARCH="x86"
export BUILD_TARGET="linux"
export BUILD_TARGET_ARCH="x86"
export BUILD_TARGET_CPU="$ARCH"
export BUILD_TYPE="release"
export PATH_KBUILD="$TMP/$SRCNAM-$VERSION/kBuild"
export PATH_DEVTOOLS="$TMP/$SRCNAM-$VERSION/tools"
path_kbuild_bin="$PATH_KBUILD/bin/$BUILD_TARGET.$BUILD_PLATFORM_ARCH"
export PATH_KBUILD_BIN="$path_kbuild_bin"
path_dev_bin="$PATH_DEVTOOLS/$BUILD_TARGET.$BUILD_PLATFORM_ARCH"/bin
echo "$PATH" | grep -q "$path_kbuild_bin" || PATH="$path_kbuild_bin:$PATH"
echo "$PATH" | grep -q "$path_dev_bin" || PATH="$path_dev_bin:$PATH"
export PATH
unset path_kbuild_bin path_dev_bin

kmk -j ${JOBS} LOCALCFG=$CWD/LocalConfig.kmk

mkdir -p $PKG/usr/{src,bin,sbin,share/autostart} \
  $PKG/etc/{xdg/autostart,udev/rules.d,rc.d} \
  $PKG/usr/lib/xorg/modules/{drivers,input}

# Patch vboxadd-timesync.sh to support Slackware
patch -d src/VBox/Additions/linux/installer -i $CWD/vboxadd-timesync.diff

cp -f src/VBox/Additions/linux/installer/vboxadd.sh $PKG/etc/rc.d/rc.vboxadd.new
cp -f src/VBox/Additions/linux/installer/vboxvfs.sh $PKG/etc/rc.d/rc.vboxvfs.new
cp -f src/VBox/Additions/linux/installer/vboxadd-timesync.sh $PKG/etc/rc.d/rc.vboxadd-timesync.new

cp -f src/VBox/Additions/x11/installer/vboxclient.desktop $PKG/etc/xdg/autostart/
cp -f src/VBox/Additions/x11/installer/vboxclient.desktop $PKG/usr/share/autostart/
install -m 755 src/VBox/Additions/x11/installer/VBoxRandR.sh $PKG/usr/bin/VBoxRandR

echo "KERNEL==\"vboxadd\", NAME=\"vboxadd\", OWNER=\"vboxadd\", MODE=\"0660\"" \
 > $PKG/etc/udev/rules.d/60-vboxadd.rules

cd out/linux.x86/release/bin/additions
  cp -rf src/vboxadd $PKG/usr/src/vboxadd-$VERSION
  cp -rf src/vboxvfs $PKG/usr/src/vboxvfs-$VERSION
  install -m 755 VBoxControl $PKG/usr/bin/
  install -m 755 VBoxClient $PKG/usr/bin/
  install -m 755 vboxadd-timesync $PKG/usr/sbin/
  install -m 4755 mountvboxsf $PKG/usr/sbin/mount.vboxsf
  install -m 644 vboxvideo_drv_14.so $PKG/usr/lib/xorg/modules/drivers/vboxvideo_drv.so
  install -m 644 vboxmouse_drv_14.so $PKG/usr/lib/xorg/modules/input/vboxmouse_drv.so

  chown vboxadd:1 $PKG/usr/bin/VBoxClient
  chmod 4755 $PKG/usr/bin/VBoxClient
cd -

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -f COPYING COPYING.CDDL $PKG/usr/doc/$PRGNAM-$VERSION
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc
cat $CWD/doinst.sh > $PKG/install/doinst.sh

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz
