diff -Naur stellarium-0.9.1.orig/src/StelApp.cpp stellarium-0.9.1/src/StelApp.cpp
--- stellarium-0.9.1.orig/src/StelApp.cpp	2008-01-17 09:15:35.000000000 -0500
+++ stellarium-0.9.1/src/StelApp.cpp	2008-09-01 14:12:51.000000000 -0400
@@ -141,7 +141,7 @@
 	{
 		Translator::init(stelFileMgr->findFile("data/iso639-1.utf8"));
 	}
-	catch (exception& e)
+	catch (std::exception& e)
 	{
 		cerr << "ERROR while loading translations: " << e.what() << endl;
 	}
@@ -180,7 +180,7 @@
 	{
 		fontMapFile = stelFileMgr->findFile(QFile::decodeName("data/fontmap.dat"));
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR when locating font map file: " << e.what() << endl;
 	}
@@ -243,7 +243,7 @@
 	{
 		iconPath = stelFileMgr->findFile("data/icon.bmp");
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR when trying to locate icon file: " << e.what() << endl;
 	}
@@ -425,7 +425,7 @@
 				stelFileMgr->findFile("landscapes/" + *i + "/landscape.ini");
 				cout << (*i).toUtf8().data() << endl;
 			}
-			catch(exception& e){}
+			catch(std::exception& e){}
 		}
 		exit(0);
 	}
@@ -434,7 +434,7 @@
 	{
 		setConfigFile(qPrintable(argsGetOptionWithArg<QString>(argList, "-c", "--config-file", "config.ini")));
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR: while looking for --config-file option: " << e.what() << ". Using \"config.ini\"" << endl;
 		setConfigFile("config.ini");		
@@ -463,7 +463,7 @@
 		projectionType = argsGetOptionWithArg<QString>(argList, "", "--projection-type", "");
 
 	}
-	catch (exception& e)
+	catch (std::exception& e)
 	{
 		cerr << "ERROR while checking command line options: " << e.what() << endl;
 		exit(0);
@@ -746,7 +746,7 @@
 		configFile = stelFileMgr->findFile(configName, StelFileMgr::FLAGS(StelFileMgr::WRITABLE|StelFileMgr::FILE));
 		return;
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		//cerr << "DEBUG StelApp::setConfigFile could not locate writable config file " << configName << endl;
 	}
@@ -756,7 +756,7 @@
 		configFile = stelFileMgr->findFile(configName, StelFileMgr::FILE);	
 		return;
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		//cerr << "DEBUG StelApp::setConfigFile could not find read only config file " << configName << endl;
 	}		
@@ -767,7 +767,7 @@
 		//cerr << "DEBUG StelApp::setConfigFile found NEW file path: " << configFile << endl;
 		return;
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR StelApp::setConfigFile could not find or create configuration file " << configName.toUtf8().data() << endl;
 		exit(1);
@@ -781,7 +781,7 @@
 	{
 		defaultConfigFilePath = stelFileMgr->findFile("data/default_config.ini");
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR (copyDefaultConfigFile): failed to locate data/default_config.ini.  Please check your installation." << endl;
 		exit(1);
diff -Naur stellarium-0.9.1.orig/src/stel_command_interface.cpp stellarium-0.9.1/src/stel_command_interface.cpp
--- stellarium-0.9.1.orig/src/stel_command_interface.cpp	2008-01-17 09:15:35.000000000 -0500
+++ stellarium-0.9.1/src/stel_command_interface.cpp	2008-09-01 14:16:11.000000000 -0400
@@ -436,7 +436,7 @@
 					image_filename = stapp->getFileMgr().findFile(image_filename);
 					script_images->load_image(image_filename, args["name"].c_str(), img_pos);
 				}
-				catch(exception& e)
+				catch(std::exception& e)
 				{
 					cerr << "ERROR finding script: " << e.what() << endl;
 					debug_message = _("Unable to open file: ") + image_filename.toStdWString();
@@ -511,7 +511,7 @@
 					audio = new Audio(QFile::encodeName(audioFilePath).constData(), "default track", StelUtils::stringToLong(args["output_rate"]));
 					audio->play(args["loop"]=="on");
 				}
-				catch(exception& e)
+				catch(std::exception& e)
 				{
 					cerr << "ERROR while trying to play audio file: " << args["filename"] << " : " << e.what() << endl;
 				}
diff -Naur stellarium-0.9.1.orig/src/stel_ui_conf.cpp stellarium-0.9.1/src/stel_ui_conf.cpp
--- stellarium-0.9.1.orig/src/stel_ui_conf.cpp	2008-01-17 09:15:35.000000000 -0500
+++ stellarium-0.9.1/src/stel_ui_conf.cpp	2008-09-01 14:17:51.000000000 -0400
@@ -620,7 +620,7 @@
 	{
 		fileName = StelApp::getInstance().getFileMgr().findFile(QString("data/cities_") + planetEnglishName.c_str() + ".fab");
 	}
-	catch (exception& e)
+	catch (std::exception& e)
 	{
 		cerr << "INFO StelUI::load_cities " << e.what() << endl;
 		return;
diff -Naur stellarium-0.9.1.orig/src/stel_ui_tuiconf.cpp stellarium-0.9.1/src/stel_ui_tuiconf.cpp
--- stellarium-0.9.1.orig/src/stel_ui_tuiconf.cpp	2008-01-17 09:15:35.000000000 -0500
+++ stellarium-0.9.1/src/stel_ui_tuiconf.cpp	2008-09-01 14:19:10.000000000 -0400
@@ -155,7 +155,7 @@
 	{
 		tui_time_settmz = new s_tui::Time_zone_item(QFile::encodeName(app->getFileMgr().findFile("data/zone.tab")).constData(), wstring(L"2.2 "));
 	}
-	catch(exception &e)
+	catch(std::exception &e)
 	{
 		cerr << "ERROR locating zone file: " << e.what() << endl;
 	}
@@ -520,7 +520,7 @@
 					cmd = "script action play filename \"" + SelectedScript 
 						+ "\" path \"" + QFile::encodeName(theParent).constData() + "/\"";
 				}
-				catch(exception& e)
+				catch(std::exception& e)
 				{
 					cerr << "ERROR while executing script " << SelectedScript << ": " << e.what() << endl;
 				}
@@ -677,7 +677,7 @@
 	{
 		saveCurrentConfig(app->getConfigFilePath());
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR: could not save config.ini file: " << e.what() << endl;
 	}
@@ -686,7 +686,7 @@
 	{
 		system( QFile::encodeName(app->getFileMgr().findFile("data/script_save_config ")).constData());
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR while calling script_save_config: " << e.what() << endl;
 	}
@@ -699,7 +699,7 @@
 	{
 		system( QFile::encodeName(app->getFileMgr().findFile("data/script_internet_update ")).constData());
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR while calling script_internet_update: " << e.what() << endl;
 	}
@@ -713,7 +713,7 @@
 	{
 		system( QFile::encodeName(app->getFileMgr().findFile("data/script_shutdown ")).constData());
 	}
-	catch(exception& e)
+	catch(std::exception& e)
 	{
 		cerr << "ERROR while calling script_shutdown: " << e.what() << endl;
 	}
