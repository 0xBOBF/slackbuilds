This is the proprietary binary video driver from NVidia for the X.Org
X-server. This package does not include the kernel module - it is a part
of the nvidia-kernel package at SlackBuilds.org.

Installing the 32-bit compatibility libraries is available: if desired, do:
  COMPAT32="yes" ./nvidia-driver.SlackBuild
  
This script installs the new GLVND versions of the libraries by default. If
this causes compatibility issues, you can switch back to the legacy 
non-GLVND versions with:
  GLVND="no" ./nvidia-driver.SlackBuild

Several useful utilities are included: nvidia-xconfig, nvidia-smi,
nvidia-settings, etc.  Please refer to the Nvidia documentation and man 
pages for details and usage.

For CUDA/OpenCL to work after reboot, you might need to include the
following line in your /etc/rc.d/rc.local:
-------------8<---------------
# Create missing nvidia device nodes after reboot
/usr/bin/nvidia-modprobe -c 0 -u
------------->8---------------

Due to the current complexity of the driver, it is currently no longer possible to 
automate restoring the open source files. Here are the affected files:

  /usr/lib[64]/libGL.la
  /usr/lib[64]/libGL.so.1
  /usr/lib[64]/libGL.so.1.0.0
  /usr/lib[64]/libGLESv1_CM.la
  /usr/lib[64]/libGLESv1_CM.so
  /usr/lib[64]/libGLESv1_CM.so.1
  /usr/lib[64]/libGLESv2.so
  /usr/lib[64]/libGLESv2.so.2
  /usr/lib[64]/libEGL.so
  /usr/lib[64]/libEGL.so.1
  /usr/lib[64]/xorg/modules/libwfb.so
  /usr/lib[64]/xorg/modules/extensions/libglx.so
  /usr/lib[64]/xorg/modules/extensions/libglx.la

The simplest way, for now, to get all the files and symlinks into the right 
place is to use pkgtools or slackpkg to reinstall the original mesa and 
xorg-server packages *after* uninstalling this nvidia package.
